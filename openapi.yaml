openapi: 3.1.0
info:
  title: Swagger Kundenverwaltung
  description: |-
    This is a sample Kundenverwaltung Server based on the OpenAPI 3.1 specification.
  termsOfService: http://swagger.io/terms/
  contact:
    email: mail@google.de
  license:
    name: _
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://customers.swagger.io/api/v3
paths:
  /customers/{customerId}/addresses/{type}:
    put:
      summary: Update or create address of a customer
      description: Update or create address of a customer by address type
      operationId: updateAddressByType  
      parameters:
        - name: customerId
          in: path
          description: ID of customer
          required: true
          schema:
            type: integer
            format: int64
        - name: type
          in: path
          description: type of address to update
          required: true
          schema:
            type: string
            examples: [invoice]
      requestBody:
        description: Update an existent address
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
      responses:
        '200':
          description: successful operation
        '404':
          description: Customer not found
  /customers/{customerId}:
    get:      
      summary: Find customer by ID
      description: Returns a single customer
      operationId: getCustomerById      
      parameters:
        - name: customerId
          in: path
          description: ID of customer to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid ID supplied
        '404':
          description: Customer not found
  /customers:
    get:
      summary: Returns all customers
      description: Returns all customers
      operationId: returnAllCustomers
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
        '404':
          description: Customer not found
    post:
      summary: Creates a new customer
      description: Creates a new customer
      operationId: createNewCustomer      
      requestBody:
        description: Create a new Customer
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid ID supplied
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          examples: [100000]
        username:
          type: string
          examples: [fehguy]
        address:
          type: array
          items:
            $ref: '#/components/schemas/Address'
    Address:
      type: object
      properties:
        type:
          type: string
          examples: [invoice]
        street:
          type: string
          examples: [437 Lytton]
        city:
          type: string
          examples: [Palo Alto]
        state:
          type: string
          examples: [CA]
        zip:
          type: string
          examples: ['94301']
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
